{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["dragDrop","require","client","WebTorrent","App","useState","magnetURI","setMagnetURI","fileToDownload","setFileToDownload","createTorrent","useCallback","seed","torrent","console","log","on","err","useEffect","initTorrent","error","message","add","infoHash","torrentFileBlobURL","name","setInterval","progress","toFixed","files","forEach","file","appendTo","dragDropContainerRef","current","useRef","className","id","onInput","e","target","type","onClick","value","onChange","ref","style","height","width","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"snBAGMA,G,OAAWC,EAAQ,MAEnBC,EAAS,IAAIC,IA6FJC,MAtFf,WAAgB,IAAD,EACoBC,mBAAiB,OADrC,mBACPC,EADO,KACIC,EADJ,OAG8BF,mBAA0B,MAHxD,mBAGPG,EAHO,KAGSC,EAHT,KAIRC,EAAgBC,uBAAY,WAC7BH,GACHN,EAAOU,KAAKJ,GAAgB,SAAAK,GAC3BC,QAAQC,IAAIF,GACZA,EAAQG,GAAG,SAAS,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,WAEvC,CAACT,IAEJU,qBAAU,kBAAMJ,QAAQC,IAAIP,KAAiB,CAACA,IAC9CU,qBAAU,WACThB,EAAOc,GAAG,SAAS,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,SAGvC,IAAME,EAAcR,uBAAY,WAC/BG,QAAQC,IAAIT,GACZJ,EAAOc,GAAG,SAAS,SAAUC,GAC5BH,QAAQM,MAAM,UAAWH,EAAII,YAE9BnB,EAAOoB,IAAIhB,GAAW,SAACO,GACtBC,QAAQC,IAAI,wBACZD,QAAQC,IACP,sBACCF,EAAQU,SADT,aAICV,EAAQP,UAJT,+CAOCO,EAAQW,mBACR,+BACAX,EAAQY,KACR,qCAGFC,aAAY,WACXZ,QAAQC,IAAI,cAAmC,IAAnBF,EAAQc,UAAgBC,QAAQ,GAAK,OAC/D,KACHd,QAAQC,IAAI,wBAAyBF,EAAQU,UAC7CV,EAAQgB,MAAMC,SAAQ,SAACC,GACtBjB,QAAQC,IAAIgB,GACZA,EAAKC,SAAS,gBAGd,CAAC1B,IAEJY,qBAAU,WACTlB,EAASiC,EAAqBC,SAAS,SAACL,GACvCf,QAAQC,IAAIc,GACZ3B,EAAOU,KAAKiB,GAAO,SAAChB,GACnBC,QAAQC,IAAI,oBAAsBF,EAAQP,oBAI7C,IAAM2B,EAAuBE,iBAAuB,MACpD,OACC,sBAAKC,UAAU,MAAf,UACC,uBACCC,GAAG,UACHZ,KAAK,OACLa,QAAS,SAACC,GACT9B,EAAkB8B,EAAEC,OAAOX,QAE5BY,KAAK,SACN,wBAAQC,QAAShC,EAAjB,uCACA,uBACC+B,KAAK,OACLE,MAAOrC,EACPsC,SAAU,SAACL,GACVhC,EAAagC,EAAEC,OAAOG,UAExB,wBAAQD,QAASvB,EAAjB,gCACA,sBACCiB,UAAU,sBACVS,IAAKZ,EACLa,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAASC,OAAQ,kBAHnD,UAIE,IAJF,YAKW,WC9ECC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2a068864.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from \"react\"\nimport WebTorrent, { Torrent, TorrentFile } from \"webtorrent\"\nimport \"./App.css\"\nconst dragDrop = require(\"drag-drop\")\n\nconst client = new WebTorrent()\n//magnet:?xt=urn:btih:1c28ff99b2f7a84d57d38b48211bfedf513915f5&tr=http%3A%2F%2Facademictorrents.com%2Fannounce.php&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969\n\n//'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent'\n\n//magnet:?xt=urn:btih:52da574b6412862e199abeaea63e51bf8cea2140&tr=http%3A%2F%2Facademictorrents.com%2Fannounce.php&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969\n\nfunction App() {\n\tconst [magnetURI, setMagnetURI] = useState<string>(\"...\")\n\n\tconst [fileToDownload, setFileToDownload] = useState<FileList | null>(null)\n\tconst createTorrent = useCallback(() => {\n\t\tif (fileToDownload)\n\t\t\tclient.seed(fileToDownload, torrent => {\n\t\t\t\tconsole.log(torrent)\n\t\t\t\ttorrent.on(\"error\", err => console.log(err))\n\t\t\t})\n\t}, [fileToDownload])\n\n\tuseEffect(() => console.log(fileToDownload), [fileToDownload])\n\tuseEffect(() => {\n\t\tclient.on(\"error\", err => console.log(err))\n\t})\n\n\tconst initTorrent = useCallback(() => {\n\t\tconsole.log(magnetURI)\n\t\tclient.on(\"error\", function (err: any) {\n\t\t\tconsole.error(\"ERROR: \", err.message)\n\t\t})\n\t\tclient.add(magnetURI, (torrent: Torrent) => {\n\t\t\tconsole.log(\"got torrent metadata\")\n\t\t\tconsole.log(\n\t\t\t\t\"Torrent info hash: \" +\n\t\t\t\t\ttorrent.infoHash +\n\t\t\t\t\t\" \" +\n\t\t\t\t\t'<a href=\"' +\n\t\t\t\t\ttorrent.magnetURI +\n\t\t\t\t\t'\" target=\"_blank\">[Magnet URI]</a> ' +\n\t\t\t\t\t'<a href=\"' +\n\t\t\t\t\ttorrent.torrentFileBlobURL +\n\t\t\t\t\t'\" target=\"_blank\" download=\"' +\n\t\t\t\t\ttorrent.name +\n\t\t\t\t\t'.torrent\">[Download .torrent]</a>'\n\t\t\t)\n\n\t\t\tsetInterval(function () {\n\t\t\t\tconsole.log(\"Progress: \" + (torrent.progress * 100).toFixed(1) + \"%\")\n\t\t\t}, 5000)\n\t\t\tconsole.log(\"client is downloading\", torrent.infoHash)\n\t\t\ttorrent.files.forEach((file: TorrentFile) => {\n\t\t\t\tconsole.log(file)\n\t\t\t\tfile.appendTo(\"body\")\n\t\t\t})\n\t\t})\n\t}, [magnetURI])\n\n\tuseEffect(() => {\n\t\tdragDrop(dragDropContainerRef.current, (files: FileList) => {\n\t\t\tconsole.log(files)\n\t\t\tclient.seed(files, (torrent: Torrent) => {\n\t\t\t\tconsole.log(\"Client is seeding\" + torrent.magnetURI)\n\t\t\t})\n\t\t})\n\t})\n\tconst dragDropContainerRef = useRef<HTMLDivElement>(null)\n\treturn (\n\t\t<div className='App'>\n\t\t\t<input\n\t\t\t\tid='torrent'\n\t\t\t\tname='file'\n\t\t\t\tonInput={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tsetFileToDownload(e.target.files)\n\t\t\t\t}}\n\t\t\t\ttype='file'></input>\n\t\t\t<button onClick={createTorrent}> create torrent from file</button>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tvalue={magnetURI}\n\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tsetMagnetURI(e.target.value)\n\t\t\t\t}}></input>\n\t\t\t<button onClick={initTorrent}> start torrenting </button>\n\t\t\t<div\n\t\t\t\tclassName='drag-drop-container'\n\t\t\t\tref={dragDropContainerRef}\n\t\t\t\tstyle={{ height: \"100px\", width: \"100px\", border: \"dashed red 3px\" }}>\n\t\t\t\t{\" \"}\n\t\t\t\tcontainer{\" \"}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}