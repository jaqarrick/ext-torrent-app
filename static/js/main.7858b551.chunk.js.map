{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","magnetURI","setMagnetURI","initTorrent","useCallback","console","log","client","WebTorrent","on","err","error","message","add","torrent","infoHash","torrentFileBlobURL","name","setInterval","progress","toFixed","files","forEach","file","appendTo","className","type","value","onChange","e","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6nBAoDeA,MAhDf,WAAgB,IAAD,EACoBC,mBAAiB,OADrC,mBACPC,EADO,KACIC,EADJ,KAGRC,EAAcC,uBAAY,WAC/BC,QAAQC,IAAIL,GACZ,IAAMM,EAAS,IAAIC,IACnBD,EAAOE,GAAG,SAAS,SAAUC,GAC5BL,QAAQM,MAAM,UAAWD,EAAIE,YAE9BL,EAAOM,IAAIZ,GAAW,SAACa,GACtBT,QAAQC,IAAI,wBACZD,QAAQC,IACP,sBACCQ,EAAQC,SADT,aAICD,EAAQb,UAJT,+CAOCa,EAAQE,mBACR,+BACAF,EAAQG,KACR,qCAGFC,aAAY,WACXb,QAAQC,IAAI,cAAmC,IAAnBQ,EAAQK,UAAgBC,QAAQ,GAAK,OAC/D,KACHf,QAAQC,IAAI,wBAAyBQ,EAAQC,UAC7CD,EAAQO,MAAMC,SAAQ,SAACC,GACtBlB,QAAQC,IAAIiB,GACZA,EAAKC,SAAS,gBAGd,CAACvB,IACJ,OACC,sBAAKwB,UAAU,MAAf,UACC,uBACCC,KAAK,OACLC,MAAO1B,EACP2B,SAAU,SAACC,GACV3B,EAAa2B,EAAEC,OAAOH,UAExB,wBAAQI,QAAS5B,EAAjB,iCCjCY6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7858b551.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\"\nimport WebTorrent, { Torrent, TorrentFile } from \"webtorrent\"\nimport \"./App.css\"\n\nfunction App() {\n\tconst [magnetURI, setMagnetURI] = useState<string>(\"...\")\n\n\tconst initTorrent = useCallback(() => {\n\t\tconsole.log(magnetURI)\n\t\tconst client = new WebTorrent()\n\t\tclient.on(\"error\", function (err: any) {\n\t\t\tconsole.error(\"ERROR: \", err.message)\n\t\t})\n\t\tclient.add(magnetURI, (torrent: Torrent) => {\n\t\t\tconsole.log(\"got torrent metadata\")\n\t\t\tconsole.log(\n\t\t\t\t\"Torrent info hash: \" +\n\t\t\t\t\ttorrent.infoHash +\n\t\t\t\t\t\" \" +\n\t\t\t\t\t'<a href=\"' +\n\t\t\t\t\ttorrent.magnetURI +\n\t\t\t\t\t'\" target=\"_blank\">[Magnet URI]</a> ' +\n\t\t\t\t\t'<a href=\"' +\n\t\t\t\t\ttorrent.torrentFileBlobURL +\n\t\t\t\t\t'\" target=\"_blank\" download=\"' +\n\t\t\t\t\ttorrent.name +\n\t\t\t\t\t'.torrent\">[Download .torrent]</a>'\n\t\t\t)\n\n\t\t\tsetInterval(function () {\n\t\t\t\tconsole.log(\"Progress: \" + (torrent.progress * 100).toFixed(1) + \"%\")\n\t\t\t}, 5000)\n\t\t\tconsole.log(\"client is downloading\", torrent.infoHash)\n\t\t\ttorrent.files.forEach((file: TorrentFile) => {\n\t\t\t\tconsole.log(file)\n\t\t\t\tfile.appendTo(\"body\")\n\t\t\t})\n\t\t})\n\t}, [magnetURI])\n\treturn (\n\t\t<div className='App'>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tvalue={magnetURI}\n\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tsetMagnetURI(e.target.value)\n\t\t\t\t}}></input>\n\t\t\t<button onClick={initTorrent}> start torrent </button>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}